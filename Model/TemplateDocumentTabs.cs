/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace DocuSign.Core.Model
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class TemplateDocumentTabs :  IEquatable<TemplateDocumentTabs>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateDocumentTabs" /> class.
        /// </summary>
        /// <param name="ApproveTabs">A list of [Approve tabs][approve].   This tab allows the recipient to approve documents without placing a signature or initials on the document. If the recipient clicks the tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document of the approval, but it is recorded as a signature in the envelope history.  [approve]:        /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve .</param>
        /// <param name="CheckboxTabs">A list of [Checkbox tabs][checkbox].   This tab allows the recipient to select a yes/no (on/off) option.   [checkbox]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox .</param>
        /// <param name="CompanyTabs">A list of  [Company tabs][company].   This tab displays the recipient&#39;s company name.    [company]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/company  .</param>
        /// <param name="DateSignedTabs">A list of  [Date Signed tabs][dateSigned]   This tab displays the date that the recipient signed the document.  [dateSigned]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned  .</param>
        /// <param name="DateTabs">A list of  [Date tabs][date].   This tab allows the recipient to enter a date. Date tabs are one-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a validation pattern and a validation message to enforce the format.   [date]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date  .</param>
        /// <param name="DeclineTabs">A list of  [Decline tabs][decline].  This tab allows the recipient the option of declining an envelope. If the recipient clicks the tab during the signing process, the envelope is voided.   [decline]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline  .</param>
        /// <param name="EmailAddressTabs">A list of  [Email Address tabs][emailAddress].  This tab  displays the recipient&#39;s email as entered in the recipient information.   [emailAddress]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress  .</param>
        /// <param name="EmailTabs">A list of  [Email tabs][email].  This tab  allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.  [email]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email  .</param>
        /// <param name="EnvelopeIdTabs">A list of  [Envelope ID tabs][envelopeId].  This tab  displays the envelope ID. Recipients cannot enter or change the information in this tab.   [envelopeId]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/envelopeId  .</param>
        /// <param name="FirstNameTabs">A list of  [First Name tabs][firstName].  This tab  displays the recipient&#39;s first name. It takes the recipient&#39;s name as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.   [firstName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/firstName  .</param>
        /// <param name="FormulaTabs">A list of [Formula tabs][formulaTab].  The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result.  The &#x60;formula&#x60; property of the tab contains the references to the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  If a formula tab contains a &#x60;paymentDetails&#x60; property, the tab is considered a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures [formulaTab]:      /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab .</param>
        /// <param name="FullNameTabs">A list of  [Full Name tabs][fullName].  This tab  displays the recipient&#39;s full name.   [fullName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName  .</param>
        /// <param name="InitialHereTabs">A list of  [Initial Here tabs][initialHere].  This tab allows the recipient to initial the document. May be optional.  [initialHere]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere  .</param>
        /// <param name="LastNameTabs">A list of  [Last Name tabs][lastName].  This tab  displays the recipient&#39;s last name. It takes the recipient&#39;s name as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.   [lastName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName  .</param>
        /// <param name="ListTabs">A list of  [list tabs][list].  This tab offers a list of options to choose from. The &#x60;listItems&#x60; property is used to specify the selectable options.    [list]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/list  .</param>
        /// <param name="NotarizeTabs">A list of  [Notarize tabs][notarize].  A notarize tab is a tab that alerts notary recipients that they must take action on the page. Only one notarize tab can appear on a page.  [notarize]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize  .</param>
        /// <param name="NoteTabs">A list of  [Note tabs][note].  This tab  displays additional information, in the form of a note, for the recipient.  [note]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note  .</param>
        /// <param name="NumberTabs">A list of  [Number tabs][number].  This tab allows the recipient to enter numbers and decimal (.) points.    [number]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number  .</param>
        /// <param name="RadioGroupTabs">A list of  [Radio Group tabs][radioGroup].  This tab  This group tab is used to place radio buttons on a document. The &#x60;radios&#x60; property is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group.   [radioGroup]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup  .</param>
        /// <param name="SignerAttachmentTabs">A list of  [Signer Attachment tabs][signerAttachment].  This tab  allows the recipient to attach supporting documents to an envelope.   [signerAttachment]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment  .</param>
        /// <param name="SignHereTabs">A list of  [Sign Here tabs][signHere].  This tab  allows the recipient to sign a document. May be optional.  [signHere]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere  .</param>
        /// <param name="SsnTabs">A list of  [SSN tabs][ssn].  This tab  is a one-line field that allows the recipient to enter a Social Security Number. The SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.   [ssn]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn  .</param>
        /// <param name="TextTabs">A list of  [Text tabs][text].  This tab  A tab that allows the recipient to enter any type of text.  [text]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/text  .</param>
        /// <param name="TitleTabs">A list of  [Title tabs][title].  This tab  displays the recipient&#39;s title.   [title]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title  .</param>
        /// <param name="ViewTabs">A list of  [View tabs][view].  This tab  This tab is used with the Approve tab to handle [supplemental documents][supdocs].  [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents [view]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view  .</param>
        /// <param name="ZipTabs">A list of  [Zip tabs][zip].  This tab  allows the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits in the ZIP+4 format. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.   [zip]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip .</param>
        public TemplateDocumentTabs(List<Approve> ApproveTabs = null, List<Checkbox> CheckboxTabs = null, List<Company> CompanyTabs = null, List<DateSigned> DateSignedTabs = null, List<DateTime?> DateTabs = null, List<Decline> DeclineTabs = null, List<EmailAddress> EmailAddressTabs = null, List<Email> EmailTabs = null, List<EnvelopeId> EnvelopeIdTabs = null, List<FirstName> FirstNameTabs = null, List<FormulaTab> FormulaTabs = null, List<FullName> FullNameTabs = null, List<InitialHere> InitialHereTabs = null, List<LastName> LastNameTabs = null, List<List> ListTabs = null, List<Notarize> NotarizeTabs = null, List<Note> NoteTabs = null, List<decimal?> NumberTabs = null, List<RadioGroup> RadioGroupTabs = null, List<SignerAttachment> SignerAttachmentTabs = null, List<SignHere> SignHereTabs = null, List<Ssn> SsnTabs = null, List<Text> TextTabs = null, List<Title> TitleTabs = null, List<View> ViewTabs = null, List<Zip> ZipTabs = null)
        {
            this.ApproveTabs = ApproveTabs;
            this.CheckboxTabs = CheckboxTabs;
            this.CompanyTabs = CompanyTabs;
            this.DateSignedTabs = DateSignedTabs;
            this.DateTabs = DateTabs;
            this.DeclineTabs = DeclineTabs;
            this.EmailAddressTabs = EmailAddressTabs;
            this.EmailTabs = EmailTabs;
            this.EnvelopeIdTabs = EnvelopeIdTabs;
            this.FirstNameTabs = FirstNameTabs;
            this.FormulaTabs = FormulaTabs;
            this.FullNameTabs = FullNameTabs;
            this.InitialHereTabs = InitialHereTabs;
            this.LastNameTabs = LastNameTabs;
            this.ListTabs = ListTabs;
            this.NotarizeTabs = NotarizeTabs;
            this.NoteTabs = NoteTabs;
            this.NumberTabs = NumberTabs;
            this.RadioGroupTabs = RadioGroupTabs;
            this.SignerAttachmentTabs = SignerAttachmentTabs;
            this.SignHereTabs = SignHereTabs;
            this.SsnTabs = SsnTabs;
            this.TextTabs = TextTabs;
            this.TitleTabs = TitleTabs;
            this.ViewTabs = ViewTabs;
            this.ZipTabs = ZipTabs;
        }
        
        /// <summary>
        /// A list of [Approve tabs][approve].   This tab allows the recipient to approve documents without placing a signature or initials on the document. If the recipient clicks the tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document of the approval, but it is recorded as a signature in the envelope history.  [approve]:        /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve 
        /// </summary>
        /// <value>A list of [Approve tabs][approve].   This tab allows the recipient to approve documents without placing a signature or initials on the document. If the recipient clicks the tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document of the approval, but it is recorded as a signature in the envelope history.  [approve]:        /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/approve </value>
        [DataMember(Name="approveTabs", EmitDefaultValue=false)]
        public List<Approve> ApproveTabs { get; set; }
        /// <summary>
        /// A list of [Checkbox tabs][checkbox].   This tab allows the recipient to select a yes/no (on/off) option.   [checkbox]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox 
        /// </summary>
        /// <value>A list of [Checkbox tabs][checkbox].   This tab allows the recipient to select a yes/no (on/off) option.   [checkbox]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/checkbox </value>
        [DataMember(Name="checkboxTabs", EmitDefaultValue=false)]
        public List<Checkbox> CheckboxTabs { get; set; }
        /// <summary>
        /// A list of  [Company tabs][company].   This tab displays the recipient&#39;s company name.    [company]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/company  
        /// </summary>
        /// <value>A list of  [Company tabs][company].   This tab displays the recipient&#39;s company name.    [company]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/company  </value>
        [DataMember(Name="companyTabs", EmitDefaultValue=false)]
        public List<Company> CompanyTabs { get; set; }
        /// <summary>
        /// A list of  [Date Signed tabs][dateSigned]   This tab displays the date that the recipient signed the document.  [dateSigned]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned  
        /// </summary>
        /// <value>A list of  [Date Signed tabs][dateSigned]   This tab displays the date that the recipient signed the document.  [dateSigned]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/dateSigned  </value>
        [DataMember(Name="dateSignedTabs", EmitDefaultValue=false)]
        public List<DateSigned> DateSignedTabs { get; set; }
        /// <summary>
        /// A list of  [Date tabs][date].   This tab allows the recipient to enter a date. Date tabs are one-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a validation pattern and a validation message to enforce the format.   [date]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date  
        /// </summary>
        /// <value>A list of  [Date tabs][date].   This tab allows the recipient to enter a date. Date tabs are one-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a validation pattern and a validation message to enforce the format.   [date]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/date  </value>
        [DataMember(Name="dateTabs", EmitDefaultValue=false)]
        public List<DateTime?> DateTabs { get; set; }
        /// <summary>
        /// A list of  [Decline tabs][decline].  This tab allows the recipient the option of declining an envelope. If the recipient clicks the tab during the signing process, the envelope is voided.   [decline]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline  
        /// </summary>
        /// <value>A list of  [Decline tabs][decline].  This tab allows the recipient the option of declining an envelope. If the recipient clicks the tab during the signing process, the envelope is voided.   [decline]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/decline  </value>
        [DataMember(Name="declineTabs", EmitDefaultValue=false)]
        public List<Decline> DeclineTabs { get; set; }
        /// <summary>
        /// A list of  [Email Address tabs][emailAddress].  This tab  displays the recipient&#39;s email as entered in the recipient information.   [emailAddress]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress  
        /// </summary>
        /// <value>A list of  [Email Address tabs][emailAddress].  This tab  displays the recipient&#39;s email as entered in the recipient information.   [emailAddress]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/emailAddress  </value>
        [DataMember(Name="emailAddressTabs", EmitDefaultValue=false)]
        public List<EmailAddress> EmailAddressTabs { get; set; }
        /// <summary>
        /// A list of  [Email tabs][email].  This tab  allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.  [email]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email  
        /// </summary>
        /// <value>A list of  [Email tabs][email].  This tab  allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.  When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.  [email]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/email  </value>
        [DataMember(Name="emailTabs", EmitDefaultValue=false)]
        public List<Email> EmailTabs { get; set; }
        /// <summary>
        /// A list of  [Envelope ID tabs][envelopeId].  This tab  displays the envelope ID. Recipients cannot enter or change the information in this tab.   [envelopeId]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/envelopeId  
        /// </summary>
        /// <value>A list of  [Envelope ID tabs][envelopeId].  This tab  displays the envelope ID. Recipients cannot enter or change the information in this tab.   [envelopeId]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/envelopeId  </value>
        [DataMember(Name="envelopeIdTabs", EmitDefaultValue=false)]
        public List<EnvelopeId> EnvelopeIdTabs { get; set; }
        /// <summary>
        /// A list of  [First Name tabs][firstName].  This tab  displays the recipient&#39;s first name. It takes the recipient&#39;s name as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.   [firstName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/firstName  
        /// </summary>
        /// <value>A list of  [First Name tabs][firstName].  This tab  displays the recipient&#39;s first name. It takes the recipient&#39;s name as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.   [firstName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/firstName  </value>
        [DataMember(Name="firstNameTabs", EmitDefaultValue=false)]
        public List<FirstName> FirstNameTabs { get; set; }
        /// <summary>
        /// A list of [Formula tabs][formulaTab].  The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result.  The &#x60;formula&#x60; property of the tab contains the references to the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  If a formula tab contains a &#x60;paymentDetails&#x60; property, the tab is considered a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures [formulaTab]:      /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab 
        /// </summary>
        /// <value>A list of [Formula tabs][formulaTab].  The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result.  The &#x60;formula&#x60; property of the tab contains the references to the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas.  If a formula tab contains a &#x60;paymentDetails&#x60; property, the tab is considered a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.  [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures [formulaTab]:      /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab </value>
        [DataMember(Name="formulaTabs", EmitDefaultValue=false)]
        public List<FormulaTab> FormulaTabs { get; set; }
        /// <summary>
        /// A list of  [Full Name tabs][fullName].  This tab  displays the recipient&#39;s full name.   [fullName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName  
        /// </summary>
        /// <value>A list of  [Full Name tabs][fullName].  This tab  displays the recipient&#39;s full name.   [fullName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/fullName  </value>
        [DataMember(Name="fullNameTabs", EmitDefaultValue=false)]
        public List<FullName> FullNameTabs { get; set; }
        /// <summary>
        /// A list of  [Initial Here tabs][initialHere].  This tab allows the recipient to initial the document. May be optional.  [initialHere]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere  
        /// </summary>
        /// <value>A list of  [Initial Here tabs][initialHere].  This tab allows the recipient to initial the document. May be optional.  [initialHere]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/initialHere  </value>
        [DataMember(Name="initialHereTabs", EmitDefaultValue=false)]
        public List<InitialHere> InitialHereTabs { get; set; }
        /// <summary>
        /// A list of  [Last Name tabs][lastName].  This tab  displays the recipient&#39;s last name. It takes the recipient&#39;s name as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.   [lastName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName  
        /// </summary>
        /// <value>A list of  [Last Name tabs][lastName].  This tab  displays the recipient&#39;s last name. It takes the recipient&#39;s name as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.   [lastName]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/lastName  </value>
        [DataMember(Name="lastNameTabs", EmitDefaultValue=false)]
        public List<LastName> LastNameTabs { get; set; }
        /// <summary>
        /// A list of  [list tabs][list].  This tab offers a list of options to choose from. The &#x60;listItems&#x60; property is used to specify the selectable options.    [list]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/list  
        /// </summary>
        /// <value>A list of  [list tabs][list].  This tab offers a list of options to choose from. The &#x60;listItems&#x60; property is used to specify the selectable options.    [list]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/list  </value>
        [DataMember(Name="listTabs", EmitDefaultValue=false)]
        public List<List> ListTabs { get; set; }
        /// <summary>
        /// A list of  [Notarize tabs][notarize].  A notarize tab is a tab that alerts notary recipients that they must take action on the page. Only one notarize tab can appear on a page.  [notarize]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize  
        /// </summary>
        /// <value>A list of  [Notarize tabs][notarize].  A notarize tab is a tab that alerts notary recipients that they must take action on the page. Only one notarize tab can appear on a page.  [notarize]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/notarize  </value>
        [DataMember(Name="notarizeTabs", EmitDefaultValue=false)]
        public List<Notarize> NotarizeTabs { get; set; }
        /// <summary>
        /// A list of  [Note tabs][note].  This tab  displays additional information, in the form of a note, for the recipient.  [note]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note  
        /// </summary>
        /// <value>A list of  [Note tabs][note].  This tab  displays additional information, in the form of a note, for the recipient.  [note]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/note  </value>
        [DataMember(Name="noteTabs", EmitDefaultValue=false)]
        public List<Note> NoteTabs { get; set; }
        /// <summary>
        /// A list of  [Number tabs][number].  This tab allows the recipient to enter numbers and decimal (.) points.    [number]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number  
        /// </summary>
        /// <value>A list of  [Number tabs][number].  This tab allows the recipient to enter numbers and decimal (.) points.    [number]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number  </value>
        [DataMember(Name="numberTabs", EmitDefaultValue=false)]
        public List<decimal?> NumberTabs { get; set; }
        /// <summary>
        /// A list of  [Radio Group tabs][radioGroup].  This tab  This group tab is used to place radio buttons on a document. The &#x60;radios&#x60; property is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group.   [radioGroup]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup  
        /// </summary>
        /// <value>A list of  [Radio Group tabs][radioGroup].  This tab  This group tab is used to place radio buttons on a document. The &#x60;radios&#x60; property is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group.   [radioGroup]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/radioGroup  </value>
        [DataMember(Name="radioGroupTabs", EmitDefaultValue=false)]
        public List<RadioGroup> RadioGroupTabs { get; set; }
        /// <summary>
        /// A list of  [Signer Attachment tabs][signerAttachment].  This tab  allows the recipient to attach supporting documents to an envelope.   [signerAttachment]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment  
        /// </summary>
        /// <value>A list of  [Signer Attachment tabs][signerAttachment].  This tab  allows the recipient to attach supporting documents to an envelope.   [signerAttachment]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signerAttachment  </value>
        [DataMember(Name="signerAttachmentTabs", EmitDefaultValue=false)]
        public List<SignerAttachment> SignerAttachmentTabs { get; set; }
        /// <summary>
        /// A list of  [Sign Here tabs][signHere].  This tab  allows the recipient to sign a document. May be optional.  [signHere]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere  
        /// </summary>
        /// <value>A list of  [Sign Here tabs][signHere].  This tab  allows the recipient to sign a document. May be optional.  [signHere]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/signHere  </value>
        [DataMember(Name="signHereTabs", EmitDefaultValue=false)]
        public List<SignHere> SignHereTabs { get; set; }
        /// <summary>
        /// A list of  [SSN tabs][ssn].  This tab  is a one-line field that allows the recipient to enter a Social Security Number. The SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.   [ssn]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn  
        /// </summary>
        /// <value>A list of  [SSN tabs][ssn].  This tab  is a one-line field that allows the recipient to enter a Social Security Number. The SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.   [ssn]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/ssn  </value>
        [DataMember(Name="ssnTabs", EmitDefaultValue=false)]
        public List<Ssn> SsnTabs { get; set; }
        /// <summary>
        /// A list of  [Text tabs][text].  This tab  A tab that allows the recipient to enter any type of text.  [text]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/text  
        /// </summary>
        /// <value>A list of  [Text tabs][text].  This tab  A tab that allows the recipient to enter any type of text.  [text]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/text  </value>
        [DataMember(Name="textTabs", EmitDefaultValue=false)]
        public List<Text> TextTabs { get; set; }
        /// <summary>
        /// A list of  [Title tabs][title].  This tab  displays the recipient&#39;s title.   [title]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title  
        /// </summary>
        /// <value>A list of  [Title tabs][title].  This tab  displays the recipient&#39;s title.   [title]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/title  </value>
        [DataMember(Name="titleTabs", EmitDefaultValue=false)]
        public List<Title> TitleTabs { get; set; }
        /// <summary>
        /// A list of  [View tabs][view].  This tab  This tab is used with the Approve tab to handle [supplemental documents][supdocs].  [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents [view]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view  
        /// </summary>
        /// <value>A list of  [View tabs][view].  This tab  This tab is used with the Approve tab to handle [supplemental documents][supdocs].  [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents [view]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/view  </value>
        [DataMember(Name="viewTabs", EmitDefaultValue=false)]
        public List<View> ViewTabs { get; set; }
        /// <summary>
        /// A list of  [Zip tabs][zip].  This tab  allows the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits in the ZIP+4 format. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.   [zip]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip 
        /// </summary>
        /// <value>A list of  [Zip tabs][zip].  This tab  allows the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits in the ZIP+4 format. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.   [zip]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/zip </value>
        [DataMember(Name="zipTabs", EmitDefaultValue=false)]
        public List<Zip> ZipTabs { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TemplateDocumentTabs {\n");
            sb.Append("  ApproveTabs: ").Append(ApproveTabs).Append("\n");
            sb.Append("  CheckboxTabs: ").Append(CheckboxTabs).Append("\n");
            sb.Append("  CompanyTabs: ").Append(CompanyTabs).Append("\n");
            sb.Append("  DateSignedTabs: ").Append(DateSignedTabs).Append("\n");
            sb.Append("  DateTabs: ").Append(DateTabs).Append("\n");
            sb.Append("  DeclineTabs: ").Append(DeclineTabs).Append("\n");
            sb.Append("  EmailAddressTabs: ").Append(EmailAddressTabs).Append("\n");
            sb.Append("  EmailTabs: ").Append(EmailTabs).Append("\n");
            sb.Append("  EnvelopeIdTabs: ").Append(EnvelopeIdTabs).Append("\n");
            sb.Append("  FirstNameTabs: ").Append(FirstNameTabs).Append("\n");
            sb.Append("  FormulaTabs: ").Append(FormulaTabs).Append("\n");
            sb.Append("  FullNameTabs: ").Append(FullNameTabs).Append("\n");
            sb.Append("  InitialHereTabs: ").Append(InitialHereTabs).Append("\n");
            sb.Append("  LastNameTabs: ").Append(LastNameTabs).Append("\n");
            sb.Append("  ListTabs: ").Append(ListTabs).Append("\n");
            sb.Append("  NotarizeTabs: ").Append(NotarizeTabs).Append("\n");
            sb.Append("  NoteTabs: ").Append(NoteTabs).Append("\n");
            sb.Append("  NumberTabs: ").Append(NumberTabs).Append("\n");
            sb.Append("  RadioGroupTabs: ").Append(RadioGroupTabs).Append("\n");
            sb.Append("  SignerAttachmentTabs: ").Append(SignerAttachmentTabs).Append("\n");
            sb.Append("  SignHereTabs: ").Append(SignHereTabs).Append("\n");
            sb.Append("  SsnTabs: ").Append(SsnTabs).Append("\n");
            sb.Append("  TextTabs: ").Append(TextTabs).Append("\n");
            sb.Append("  TitleTabs: ").Append(TitleTabs).Append("\n");
            sb.Append("  ViewTabs: ").Append(ViewTabs).Append("\n");
            sb.Append("  ZipTabs: ").Append(ZipTabs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as TemplateDocumentTabs);
        }

        /// <summary>
        /// Returns true if TemplateDocumentTabs instances are equal
        /// </summary>
        /// <param name="other">Instance of TemplateDocumentTabs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TemplateDocumentTabs other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ApproveTabs == other.ApproveTabs ||
                    this.ApproveTabs != null &&
                    this.ApproveTabs.SequenceEqual(other.ApproveTabs)
                ) && 
                (
                    this.CheckboxTabs == other.CheckboxTabs ||
                    this.CheckboxTabs != null &&
                    this.CheckboxTabs.SequenceEqual(other.CheckboxTabs)
                ) && 
                (
                    this.CompanyTabs == other.CompanyTabs ||
                    this.CompanyTabs != null &&
                    this.CompanyTabs.SequenceEqual(other.CompanyTabs)
                ) && 
                (
                    this.DateSignedTabs == other.DateSignedTabs ||
                    this.DateSignedTabs != null &&
                    this.DateSignedTabs.SequenceEqual(other.DateSignedTabs)
                ) && 
                (
                    this.DateTabs == other.DateTabs ||
                    this.DateTabs != null &&
                    this.DateTabs.SequenceEqual(other.DateTabs)
                ) && 
                (
                    this.DeclineTabs == other.DeclineTabs ||
                    this.DeclineTabs != null &&
                    this.DeclineTabs.SequenceEqual(other.DeclineTabs)
                ) && 
                (
                    this.EmailAddressTabs == other.EmailAddressTabs ||
                    this.EmailAddressTabs != null &&
                    this.EmailAddressTabs.SequenceEqual(other.EmailAddressTabs)
                ) && 
                (
                    this.EmailTabs == other.EmailTabs ||
                    this.EmailTabs != null &&
                    this.EmailTabs.SequenceEqual(other.EmailTabs)
                ) && 
                (
                    this.EnvelopeIdTabs == other.EnvelopeIdTabs ||
                    this.EnvelopeIdTabs != null &&
                    this.EnvelopeIdTabs.SequenceEqual(other.EnvelopeIdTabs)
                ) && 
                (
                    this.FirstNameTabs == other.FirstNameTabs ||
                    this.FirstNameTabs != null &&
                    this.FirstNameTabs.SequenceEqual(other.FirstNameTabs)
                ) && 
                (
                    this.FormulaTabs == other.FormulaTabs ||
                    this.FormulaTabs != null &&
                    this.FormulaTabs.SequenceEqual(other.FormulaTabs)
                ) && 
                (
                    this.FullNameTabs == other.FullNameTabs ||
                    this.FullNameTabs != null &&
                    this.FullNameTabs.SequenceEqual(other.FullNameTabs)
                ) && 
                (
                    this.InitialHereTabs == other.InitialHereTabs ||
                    this.InitialHereTabs != null &&
                    this.InitialHereTabs.SequenceEqual(other.InitialHereTabs)
                ) && 
                (
                    this.LastNameTabs == other.LastNameTabs ||
                    this.LastNameTabs != null &&
                    this.LastNameTabs.SequenceEqual(other.LastNameTabs)
                ) && 
                (
                    this.ListTabs == other.ListTabs ||
                    this.ListTabs != null &&
                    this.ListTabs.SequenceEqual(other.ListTabs)
                ) && 
                (
                    this.NotarizeTabs == other.NotarizeTabs ||
                    this.NotarizeTabs != null &&
                    this.NotarizeTabs.SequenceEqual(other.NotarizeTabs)
                ) && 
                (
                    this.NoteTabs == other.NoteTabs ||
                    this.NoteTabs != null &&
                    this.NoteTabs.SequenceEqual(other.NoteTabs)
                ) && 
                (
                    this.NumberTabs == other.NumberTabs ||
                    this.NumberTabs != null &&
                    this.NumberTabs.SequenceEqual(other.NumberTabs)
                ) && 
                (
                    this.RadioGroupTabs == other.RadioGroupTabs ||
                    this.RadioGroupTabs != null &&
                    this.RadioGroupTabs.SequenceEqual(other.RadioGroupTabs)
                ) && 
                (
                    this.SignerAttachmentTabs == other.SignerAttachmentTabs ||
                    this.SignerAttachmentTabs != null &&
                    this.SignerAttachmentTabs.SequenceEqual(other.SignerAttachmentTabs)
                ) && 
                (
                    this.SignHereTabs == other.SignHereTabs ||
                    this.SignHereTabs != null &&
                    this.SignHereTabs.SequenceEqual(other.SignHereTabs)
                ) && 
                (
                    this.SsnTabs == other.SsnTabs ||
                    this.SsnTabs != null &&
                    this.SsnTabs.SequenceEqual(other.SsnTabs)
                ) && 
                (
                    this.TextTabs == other.TextTabs ||
                    this.TextTabs != null &&
                    this.TextTabs.SequenceEqual(other.TextTabs)
                ) && 
                (
                    this.TitleTabs == other.TitleTabs ||
                    this.TitleTabs != null &&
                    this.TitleTabs.SequenceEqual(other.TitleTabs)
                ) && 
                (
                    this.ViewTabs == other.ViewTabs ||
                    this.ViewTabs != null &&
                    this.ViewTabs.SequenceEqual(other.ViewTabs)
                ) && 
                (
                    this.ZipTabs == other.ZipTabs ||
                    this.ZipTabs != null &&
                    this.ZipTabs.SequenceEqual(other.ZipTabs)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ApproveTabs != null)
                    hash = hash * 59 + this.ApproveTabs.GetHashCode();
                if (this.CheckboxTabs != null)
                    hash = hash * 59 + this.CheckboxTabs.GetHashCode();
                if (this.CompanyTabs != null)
                    hash = hash * 59 + this.CompanyTabs.GetHashCode();
                if (this.DateSignedTabs != null)
                    hash = hash * 59 + this.DateSignedTabs.GetHashCode();
                if (this.DateTabs != null)
                    hash = hash * 59 + this.DateTabs.GetHashCode();
                if (this.DeclineTabs != null)
                    hash = hash * 59 + this.DeclineTabs.GetHashCode();
                if (this.EmailAddressTabs != null)
                    hash = hash * 59 + this.EmailAddressTabs.GetHashCode();
                if (this.EmailTabs != null)
                    hash = hash * 59 + this.EmailTabs.GetHashCode();
                if (this.EnvelopeIdTabs != null)
                    hash = hash * 59 + this.EnvelopeIdTabs.GetHashCode();
                if (this.FirstNameTabs != null)
                    hash = hash * 59 + this.FirstNameTabs.GetHashCode();
                if (this.FormulaTabs != null)
                    hash = hash * 59 + this.FormulaTabs.GetHashCode();
                if (this.FullNameTabs != null)
                    hash = hash * 59 + this.FullNameTabs.GetHashCode();
                if (this.InitialHereTabs != null)
                    hash = hash * 59 + this.InitialHereTabs.GetHashCode();
                if (this.LastNameTabs != null)
                    hash = hash * 59 + this.LastNameTabs.GetHashCode();
                if (this.ListTabs != null)
                    hash = hash * 59 + this.ListTabs.GetHashCode();
                if (this.NotarizeTabs != null)
                    hash = hash * 59 + this.NotarizeTabs.GetHashCode();
                if (this.NoteTabs != null)
                    hash = hash * 59 + this.NoteTabs.GetHashCode();
                if (this.NumberTabs != null)
                    hash = hash * 59 + this.NumberTabs.GetHashCode();
                if (this.RadioGroupTabs != null)
                    hash = hash * 59 + this.RadioGroupTabs.GetHashCode();
                if (this.SignerAttachmentTabs != null)
                    hash = hash * 59 + this.SignerAttachmentTabs.GetHashCode();
                if (this.SignHereTabs != null)
                    hash = hash * 59 + this.SignHereTabs.GetHashCode();
                if (this.SsnTabs != null)
                    hash = hash * 59 + this.SsnTabs.GetHashCode();
                if (this.TextTabs != null)
                    hash = hash * 59 + this.TextTabs.GetHashCode();
                if (this.TitleTabs != null)
                    hash = hash * 59 + this.TitleTabs.GetHashCode();
                if (this.ViewTabs != null)
                    hash = hash * 59 + this.ViewTabs.GetHashCode();
                if (this.ZipTabs != null)
                    hash = hash * 59 + this.ZipTabs.GetHashCode();
                return hash;
            }
        }
    }

}
